/*
 * *
 *  * Created by Vladimir Belov on 07.03.2022, 22:54
 *  * Copyright (c) 2018 - 2022. All rights reserved.
 *  * Last modified 24.02.2022, 11:13
 *
 */

apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {

    signingConfigs {
        if (keystorePropertiesFile.exists()) {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
            release_no_compression {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    compileSdk 35

    defaultConfig {
        buildToolsVersion  = "36.0.0-rc1" //https://developer.android.com/tools/releases/build-tools

        def locales = ['en', 'de', 'ru', 'es', 'uk', 'pt', 'fr', 'be', 'pl', 'cs']
        buildConfigField "String[]", "TRANSLATIONS", "new String[]{\""+locales.join("\",\"")+"\"}"
        resConfigs locales
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    buildFeatures {
        dataBinding false
        viewBinding false
        buildConfig true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude "/META-INF/*.kotlin_module"
        exclude "**/kotlin/**"
        exclude "**/*.txt"
        exclude "**/*.xml"
        exclude "**/*.properties"
    }

    //https://stackoverflow.com/questions/21405457/autoincrement-versioncode-with-gradle-extra-properties
    def versionPropsFile = rootProject.file('version.properties')
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def code = versionProps['VERSION_CODE'].toInteger() + 1

        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "org.vovka.birthdaycountdown"
            //https://stackoverflow.com/questions/24441178/recommended-minimum-android-app-sdk
            minSdkVersion 21 //выше или ниже 17- увеличивают объём APK, 21 - минимальная для поддержки тем и ?android:attr
            //https://stackoverflow.com/questions/26694108/what-is-the-difference-between-compilesdkversion-and-targetsdkversion
            //minSdkVersion (lowest possible) <= targetSdkVersion == compileSdkVersion (latest SDK)
            targetSdkVersion 35 //https://developer.android.com/reference/android/os/Build.VERSION_CODES.html
            versionCode code
            versionName "1.8.5"
            vectorDrawables.useSupportLibrary = true //https://stackoverflow.com/questions/41407811/android-vectordrawables-usesupportlibrary-true-is-stopping-app
        }
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }
    buildTypes {
        release {
            //https://stackoverflow.com/questions/3540739/how-to-programmatically-read-the-date-when-my-android-apk-was-built
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + System.currentTimeMillis() + "L)"

            debuggable false
            minifyEnabled true
            shrinkResources true
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
            //https://habr.com/ru/post/415499/
            //https://www.guardsquare.com/en/products/proguard/manual/retrace
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release_no_compression {
            //https://stackoverflow.com/questions/3540739/how-to-programmatically-read-the-date-when-my-android-apk-was-built
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + System.currentTimeMillis() + "L)"

            debuggable false
            minifyEnabled false
            shrinkResources false
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + System.currentTimeMillis() + "L)"

            minifyEnabled false
            shrinkResources false
            debuggable true
            jniDebuggable true
            renderscriptDebuggable = true
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
        //coreLibraryDesugaringEnabled true
    }
    namespace 'org.vovka.birthdaycountdown'

    //https://stackoverflow.com/questions/28249036/app-release-apk-how-to-change-this-default-generated-apk-name
    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach { output ->
            outputFileName = new File("Birthdays&Events_" + variant.versionName + ".apk")
        }
    }

}

dependencies {
    //noinspection GradleDependency
    implementation 'androidx.appcompat:appcompat:1.0.2' //https://developer.android.com/jetpack/androidx/releases/appcompat
    //https://issuetracker.google.com/issues/140602653
    //noinspection GradleDependency
    implementation 'com.google.android.material:material:1.1.0-alpha10' //https://github.com/material-components/material-components-android/releases
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0' //https://developer.android.com/jetpack/androidx/releases/swiperefreshlayout
    //noinspection GradleDependency
    implementation 'androidx.recyclerview:recyclerview:1.0.0' //https://developer.android.com/jetpack/androidx/releases/recyclerview
    //noinspection GradleDependency
    implementation 'androidx.core:core:1.14.0-alpha01' //https://developer.android.com/jetpack/androidx/releases/core
    implementation 'androidx.core:core-splashscreen:1.0.1' //https://developer.android.com/jetpack/androidx/releases/core#core-splashscreen-1.0.1
    //noinspection GradleDependency
    implementation 'androidx.fragment:fragment:1.1.0' //https://developer.android.com/jetpack/androidx/releases/fragment
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}